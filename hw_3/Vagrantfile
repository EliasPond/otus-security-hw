# -*- mode: ruby -*-
# vim: set ft=ruby :
home = ENV['HOME']

MACHINES = {
  # :ubuntu => {
  #   :box_name => "ubuntu/xenial64",
  #   :box_ver => "20160319.0.0",
  #   :ip_addr => '192.168.11.101',
  #   :disks => {
  #     :sata1 => {
  #       :dfile => home + '/VirtualBox VMs/ubuntu.vdi',
  #       :size => 8196,
  #       :port => 2
  #     },
  #   }
  # },
  :centos => {
    :box_name => "centos/7",
    :box_ver => "1505.01",
    :ip_addr => '192.168.11.102',
    :disks => {
      :sata1 => {
        :dfile => home + '/VirtualBox VMs/centos.vdi',
        :size => 8196,
        :port => 2
      },
    }
  }
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

      config.vm.define boxname do |box|

          box.vm.box = boxconfig[:box_name]
          box.vm.box_version = boxconfig[:box_ver]
          box.vm.host_name = boxname.to_s

          box.vm.network "private_network", ip: boxconfig[:ip_addr]

          box.vm.provider :virtualbox do |vb|
                  vb.customize ["modifyvm", :id, "--memory", 1024]
                  vb.customize ["modifyvm", :id, "--cpus", 1]
          vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]

          boxconfig[:disks].each do |dname, dconf|
              unless File.exist?(dconf[:dfile])
                vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
              end
              vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
          end
          end

      box.vm.provision "shell", inline: <<-SHELL
        # apt-get -y install gcc
        yum -y install gcc
        curl https://raw.githubusercontent.com/dirtycow/dirtycow.github.io/master/dirtyc0w.c > /tmp/dirtyc0w.c
        gcc -pthread /tmp/dirtyc0w.c -o /tmp/dirtyc0w
        touch /tmp/cow_test
        echo i am locked > /tmp/cow_test
        chmod 0404 /tmp/cow_test
        chown root:root /tmp/cow_test
      SHELL

    end
  end
end